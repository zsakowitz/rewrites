import { makeParserFromMap } from "./make-parser-from-map"

export const caseMap = {
  a: "thematic",
  ai: "possessive",
  ä: "instrumental",
  au: "proprietive",
  e: "absolutive",
  ei: "genitive",
  i: "affective",
  eu: "attributive",
  ëi: "stimulative",
  ëu: "productive",
  ö: "effectuative",
  ou: "interpretative",
  o: "ergative",
  oi: "originative",
  ü: "dative",
  iu: "interdependent",
  u: "inducive",
  ui: "partitive",
  "ia/uä": "applicative",
  ao: "functive",
  "ie/uë": "purposive",
  aö: "transformative",
  "io/üä": "transmissive",
  eo: "classificative",
  "iö/üë": "deferential",
  eö: "resultative",
  eë: "contrastive",
  oë: "consumptive",
  "uö/öë": "transpositive",
  öe: "concessive",
  "uo/öä": "commutative",
  oe: "aversive",
  "ue/ië": "comparative",
  öa: "conversive",
  "ua/iä": "considerative",
  oa: "situative",

  "a'a/'a/a'": "pertinential",
  "a'i/'ai/ai'": "activative",
  "ä'ä/'ä/ä'": "descriptive",
  "a'u/'au/au'": "assimilative",
  "e'e/'e/e'": "correlative",
  "e'i/'ei/ei'": "essive",
  "i'i/'i/i'": "compositive",
  "e'u/'eu/eu'": "terminative",
  "ë'i/'ëi/ëi'": "comitative",
  "ë'u/'ëu/ëu'": "selective",
  "ö'ö/'ö/ö'": "utilitative",
  "o'u/'ou/ou'": "conformative",
  "o'o/'o/o'": "predicative",
  "o'i/'oi/oi'": "dependent",
  "u'u/'u/u'": "relative",
  "u'i/'ui/ui'": "vocative",
  "i'a/'ia/ia'": "locative",
  "a'o/'ao/ao'": "concursive",
  "i'e/'ie/ie'": "attendant",
  "a'ö/'aö/aö'": "assessive",
  "i'o/'io/io'": "allative",
  "e'o/'eo/eo'": "periodic",
  "i'ö/'iö/iö'": "ablative",
  "e'ö/'eö/eö'": "prolapsive",
  "e'ë/'eë/eë'": "orientative",
  "o'ë/'oë/oë'": "precursive",
  "u'ö/'uö/uö'": "interrelative",
  "ö'e/'öe/öe'": "postcursive",
  "u'o/'uo/uo'": "intrative",
  "o'e/'oe/oe'": "elapsive",
  "u'a/'ua/ua'": "navigative",
  "o'a/'oa/oa'": "prolimitive",
} as const

export type Case = (typeof caseMap)[keyof typeof caseMap]

export const Case = makeParserFromMap<Case>(caseMap)
